//先写一个框架， 以后根据自己的需要扩充命令
你作为一个linux下的c语言开发者， 需要完成下面的任务。
1, 使用tcp协议写一个service, 服务端接收json数据， 格式如下
{"cmd":"mount", "uuid":"614eacee-debc-4f0c-bf33-22955999466d", "path":"/home/arch/samb"}

2, 服务器解析收到的json, 开始执行对应的命令， 如"mount UUID=614eacee-debc-4f0c-bf33-22955999466d /home/arch/samb"

3, 服务器执行完命令后将命令打印的信息传递给客户端

4, 在写一个客户端， 通过tcp协议向服务端发送{"cmd":"mount", "uuid":"614eacee-debc-4f0c-bf33-22955999466d", "path":"/home/arch/samb"}, 并将返回的数据打印到控制台




-------------------------
增加一个用于区分同步异步的标识sync, true表示同步， false表示异步
{"cmd":"mount", "sync":"true", "uuid":"614eacee-debc-4f0c-bf33-22955999466d", "path":"/home/arch/samb"}
同步表示服务器将命令打印的终端日志通过tcp回写给客户端。异步表示服务器读取json命令后直接关闭socket, 后续执行json命令的终端结果不用通过tcp回写给客户端




在此基础上增加一种json指令{"cmd":"sleep", "times":"120", "sync":"false"}，它没有实际用途，仅用于测试， 功能是异步执行命令,sleep两分钟



因为异步命令可能花费大量时间，例如执行磁盘备份功能， 我想知道现在正在执行哪些异步指令，
比如当前正在执行{"cmd":"sleep", "times":"120", "sync":"false"}， 
增加一条异步指令 {"cmd":"currentAsyn", "sync":"true"},这可以回写当前正在执行的异步指令
1, 同时执行的异步指令可能有多个， 所以需要使用一个链表来存储当前执行的json指令
2, 当相应异步json指令执行完毕时需要从这个链表删除对应的json指令
3, 当执行{"cmd":"currentAsyn", "sync":"true"}， 回写链表中所有的json指令
4, 需要考虑对链表操作的资源竞争问题






由于现在的client代码不便于测试， 优化一下，
1, client程序的输入参数是一个json文件
2, client从json文件中读取json命令的内容
3, 将json命令内容发送给service



